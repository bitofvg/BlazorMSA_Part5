@page "/webapi1_getbyid"
@inject IHttpClientFactory ClientFactory

<h4>Weather forecast from <b>WebApi1</b></h4>

<AuthorizeView Policy=@Cfg.Policies.WApi1_Weather_GetById>
  <NotAuthorized>
    <p>Sorry you are not authorized to WApi1_Weather_GetById[#]</p>
  </NotAuthorized>
  <Authorized>
    Get weather by position: <input @bind-value="forecastNumber" />
    <button class="btn btn-primary mr-3" @onclick="Load">Get Weather @forecastNumber</button>@LoadMsg<p></p>
    @if (forecast != null) {
      <table class="table">
        <thead>
          <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
          </tr>
        </thead>
        <tbody>
            <tr>
              <td>@forecast.Date.ToShortDateString()</td>
              <td>@forecast.TemperatureC</td>
              <td>@forecast.TemperatureF</td>
              <td>@forecast.Summary</td>
            </tr>
        </tbody>
      </table>
    }
  </Authorized>
</AuthorizeView>


@code {

  private WeatherForecast forecast;
  private int forecastNumber=1;
  private string LoadMsg { get; set; }



  protected async Task Load() {
    LoadMsg = "Working hard... ";

    var HttpClient = ClientFactory.CreateClient(Cfg.HttpClients.WebApi1);

    try {
      forecast = await HttpClient.GetFromJsonAsync<WeatherForecast>("/WeatherForecast/GetById/" + forecastNumber.ToString());
      LoadMsg = "...DONE!";
    }
    catch {
      forecast = null;
      LoadMsg = "...ERROR!";
    };
  }


}